name: ci
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  HAS_GROQ: ${{ secrets.GROQ_API_KEY != '' }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
      - name: Set env
        run: |
          echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
          echo "TICKERS=AAPL,MSFT" >> $GITHUB_ENV
          echo "USE_SEC=false" >> $GITHUB_ENV
          echo "NEWS_LIMIT=3" >> $GITHUB_ENV
          echo "TOP_K=5" >> $GITHUB_ENV
          echo "CHAT_MODEL=disabled" >> $GITHUB_ENV
          echo "SUMMARY_MODEL=disabled" >> $GITHUB_ENV
      - name: Run tests
        run: pytest -q

  docker-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        env: { DOCKER_BUILDKIT: "1" }
        run: docker build -t deal-intel -f Dockerfile .
      - name: Network + Redis
        run: |
          docker network create testnet
          docker run -d --name redis --network testnet redis:7-alpine
      - name: Run app container
        run: |
          set -e
          docker run -d --name app --network testnet -p 8000:8000 \
            -e REDIS_URL=redis://redis:6379/0 \
            -e TICKERS=AAPL,MSFT \
            -e USE_SEC=false \
            -e NEWS_LIMIT=3 \
            -e TOP_K=5 \
            -e CHAT_MODEL=disabled \
            -e SUMMARY_MODEL=disabled \
            deal-intel
          for i in {1..30}; do
            if curl -sf http://localhost:8000/health >/dev/null; then
              echo "Service healthy"; break
            fi
            sleep 1
          done
      - name: Smoke test API
        run: |
          curl -sf -X POST http://localhost:8000/run_report \
            -H 'content-type: application/json' \
            -d '{"tickers":"AAPL,MSFT","top_k":5}' | head -c 400

  # Optional LLM job; SKIPS automatically if secret not set or on forked PRs
  model-smoke:
    if: ${{ env.HAS_GROQ == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        env: { DOCKER_BUILDKIT: "1" }
        run: docker build -t deal-intel -f Dockerfile .
      - name: Network + Redis
        run: |
          docker network create testnet
          docker run -d --name redis --network testnet redis:7-alpine
      - name: Run app with Groq (OpenAI-compatible)
        env:
          OPENAI_API_KEY: ${{ secrets.GROQ_API_KEY }}
          OPENAI_BASE_URL: https://api.groq.com/openai/v1
          OPENAI_MODEL: llama-3.1-8b-instant
        run: |
          set -e
          docker run -d --name app --network testnet -p 8000:8000 \
            -e REDIS_URL=redis://redis:6379/0 \
            -e TICKERS=AAPL,MSFT \
            -e USE_SEC=false \
            -e NEWS_LIMIT=3 \
            -e TOP_K=5 \
            -e CHAT_MODEL=api:openai \
            -e OPENAI_API_KEY="$OPENAI_API_KEY" \
            -e OPENAI_BASE_URL="$OPENAI_BASE_URL" \
            -e OPENAI_MODEL="$OPENAI_MODEL" \
            deal-intel
          for i in {1..30}; do
            if curl -sf http://localhost:8000/health >/dev/null; then
              echo "Service healthy"; break
            fi
            sleep 1
          done
      - name: LLM smoke call
        run: |
          curl -sf -X POST http://localhost:8000/run_report \
            -H 'content-type: application/json' \
            -d '{"tickers":"AAPL,MSFT","top_k":4}' | head -c 400
